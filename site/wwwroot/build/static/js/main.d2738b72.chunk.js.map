{"version":3,"sources":["components/TopControl.js","components/slide/projection-rotate.js","components/slideArr.js","components/slide/zero.js","components/slide/basics.js","components/slide/basic-flow.js","components/slide/basic-flow-alt.js","components/slide/basic-code.js","components/slide/geojson-overview.js","components/slide/antimeridian.js","components/slide/geojson-geometry-obj.js","components/slide/geojson-zero-dim.js","components/slide/geojson-one-dim.js","components/slide/geojson-two-dim.js","components/slide/geojson-hetero.js","components/slide/topojson.js","components/slide/shapefiles.js","components/slide/converting-data.js","components/slide/data-sources.js","components/slide/projection.js","components/slide/projection-meth.js","components/slide/canvas-svg.js","components/slide/path.js","components/slide/path-meth.js","components/Slide.js","components/slide/xSlide.js","components/BottomControl.js","components/Presentation.js","index.js","App.js","utils/useElementSize.js"],"names":["props","useState","playSelected","setPlaySelected","time","setTime","isTimeNegative","setIsTimeNegative","isTimerActive","setIsTimerActive","useEffect","timer","setInterval","clearInterval","className","height","width","version","viewBox","xmlns","id","stopColor","offset","transform","fill","strokeWidth","aria-label","d","currentSlide","slideDeckLength","min","Math","floor","sec","string","formatTime","onClick","console","log","world","canvas","setCanvas","lambda","setLambda","canvasRef","useCallback","node","rotate","timeout","setTimeout","clearTimeout","useLayoutEffect","proj","geoOrthographic","fitExtent","feature","objects","land","ctx","getContext","path","geoPath","beginPath","fillStyle","fillRect","stroke","strokeStyle","type","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","ref","fontSize","Prism","highlightAll","style","trim","href","round","width90","height80","meridian","setMeridian","geoEquirectangular","lineWidth","closePath","globeSize","canvas1","setCanvas1","canvas2","setCanvas2","canvas3","setCanvas3","phi","setPhi","gamma","setGamma","canvasRef1","canvasRef2","canvasRef3","radius","scale","translate","clipAngle","precision","forEach","item","setSlideDeckLength","slidesMapped","slideArr","map","Comp","length","setNode","moveTo","lineTo","setCurrentSlide","height75","height90","renderSlide","xSlide","dimensions","slideW","slideH","Slide","ReactDOM","render","setDimensions","sizeRef","measure","window","requestAnimationFrame","getBoundingClientRect","addEventListener","removeEventListener","useElementSize","document","getElementById"],"mappings":"yRAKe,G,MAAA,SAAAA,GAAU,IAAD,EACkBC,mBAAS,QAD3B,mBACfC,EADe,KACDC,EADC,OAEEF,mBAAS,GAFX,mBAEfG,EAFe,KAETC,EAFS,OAGsBJ,oBAAS,GAH/B,mBAGfK,EAHe,KAGCC,EAHD,OAIoBN,oBAAS,GAJ7B,mBAIfO,EAJe,KAIAC,EAJA,KAOtBC,oBAAW,WACT,IAAIC,EAAQ,KAKZ,OAJIH,EACFG,EAAQC,YAAa,kBAAMP,EAAQ,SAAAD,GAAI,OAAIA,EAAO,KAAI,KACjDS,cAAcF,GAEd,kBAAME,cAAcF,KAC1B,CAACH,IAEJE,oBAAW,WAELN,EAAO,IAAME,GAAgBC,GAAkB,IAClD,CAACH,EAAME,IAwBV,OACE,yBAAKQ,UAAU,sBAEb,yBACEA,UAAU,uBACVC,OAAQf,EAAMe,OACdC,MAAsB,EAAfhB,EAAMe,OACbE,QAAQ,MACRC,QAAQ,uBACRC,MAAM,8BAEN,8BACE,oCAAgBC,GAAG,sBACjB,0BAAMC,UAAU,OAAOC,OAAO,MAC9B,0BAAMD,UAAU,UAAUC,OAAO,WACjC,0BAAMD,UAAU,UAAUC,OAAO,QAIrC,uBAAGC,UAAU,wBACX,uBACEA,UAAU,0CACVC,KAAK,2BACLC,YAAY,SACZC,aAAW,UAEb,0BACEC,EAAE,+WAEJ,0BACEA,EAAE,kpBAEJ,0BACEA,EAAE,2CAEJ,0BACEA,EAAE,imBAEJ,0BACEA,EAAE,6fAEJ,0BACEA,EAAE,keAOR,yBAAKb,UAAU,yBAAf,UACOd,EAAM4B,aADb,cAC+B5B,EAAM6B,kBAGrC,yBAAKf,UAAU,4BAEb,yBAAKA,UAAWR,EAAiB,mCAAqC,2BACpE,2BA9EW,SAAAF,GACbA,EAAO,IACTA,IAAS,GAEX,IAAI0B,EAAMC,KAAKC,MAAM5B,EAAO,IACxB6B,EAAM7B,EAAO,GAEb8B,EAAS,GAYb,OATeA,EAAH,IAARJ,EAAoB,MACfA,EAAM,GAAU,WAAOA,EAAP,KACd,UAAMA,EAAN,KAGII,GAAH,IAARD,EAAqB,KAChBA,EAAM,GAAU,WAAQA,GACtB,UAAOA,GA6DRE,CAAW/B,KAGjB,yBAAKU,UAAU,iCAEb,yBACEA,UAAU,4CACVsB,QAAS,WACP/B,EAAQ,GACRF,EAAgB,QAChBM,GAAiB,GACjBF,GAAkB,KAGpB,yBACEO,UAAU,8BACVC,OAAuB,GAAff,EAAMe,OACdG,QAAQ,cACRF,MAAsB,GAAfhB,EAAMe,QAEb,0BACEY,EAAE,kiBAMS,SAAjBzB,EAEI,yBACEY,UAAU,2CACVsB,QACE,WACEjC,EAAgB,IAChBM,GAAiB,KAGrB,yBACEK,UAAU,6BACVC,OAAuB,GAAff,EAAMe,OACdG,QAAQ,cACRF,MAAsB,GAAfhB,EAAMe,QAEb,0BACEY,EAAE,sHAKR,yBACEb,UAAU,4CACVsB,QACE,WACEjC,EAAgB,QAChBM,GAAiB,KAGrB,yBACEK,UAAU,8BACVC,OAAuB,GAAff,EAAMe,OACdG,QAAQ,cACRF,MAAsB,GAAfhB,EAAMe,QAEb,0BACEY,EAAE,8NASd,yBAAKb,UAAU,+BACb,yBACEA,UAAU,mDACVsB,QAAS,kBAAM/B,EAAQD,EAAO,OAE9B,yBACEU,UAAU,8BACVC,OAAuB,GAAff,EAAMe,OACdG,QAAQ,cACRF,MAAsB,GAAfhB,EAAMe,QAEb,0BACEY,EAAE,qPAGN,oCAEF,yBACEb,UAAU,mDACVsB,QAAS,kBAAM/B,EAAQD,EAAO,MAE9B,yBACEU,UAAU,8BACVC,OAAuB,GAAff,EAAMe,OACdG,QAAQ,cACRF,MAAsB,GAAfhB,EAAMe,QAEb,0BACEY,EAAE,qPAGN,yC,0DC1MZU,QAAQC,IAAI,KAAMC,GAEH,ICiBA,GCfA,SAAAvC,GAAU,IACfgB,EAAkBhB,EAAlBgB,MAAOD,EAAWf,EAAXe,OADO,EAGMd,mBAAS,MAHf,mBAGfuC,EAHe,KAGPC,EAHO,OAIMxC,mBAAS,GAJf,mBAIfyC,EAJe,KAIPC,EAJO,KAMhBC,EAAYC,sBAAY,SAAAC,GAC1BL,EAAUK,IACX,IAEGC,EAAS,WACbJ,EAAUD,EAAS,KAsDrB,OAnDAhC,oBAAW,WACT,IAAIsC,EAAUC,WAAWF,EAAQ,KAEjC,OAAO,kBAAMG,aAAaF,KACzB,CAACN,IAEJS,0BAAgB,WACd,GAAIX,EAAQ,CACV,IAAIY,EAAOC,cACRN,OAAO,CAACL,EAAQ,EAAG,IACnBY,UACC,CAAC,CAAC,EAAE,GAAI,CAACtC,EAAQ,EAAGD,EAAS,IAC7BwC,YAAQhB,EAAOA,EAAMiB,QAAQC,OAE7BC,EAAMlB,EAAOmB,WAAW,MACxBC,EAAOC,YAAQT,EAAMM,GAGzBA,EAAII,YACJJ,EAAIK,UAAY,OAChBL,EAAIM,SAAS,EAAG,EAAGhD,EAAOD,GAC1B2C,EAAIO,SAGJP,EAAII,YACJJ,EAAIQ,YAAc,UAClBR,EAAIK,UAAY,UAChBH,EAAK,CAACO,KAAM,WACZT,EAAIU,cAAgB,EACpBV,EAAIW,cAAgB,EACpBX,EAAIY,WAAgB,GACpBZ,EAAIa,YAAgB,2BACpBb,EAAIO,SACJP,EAAIlC,OAEJkC,EAAII,YACJJ,EAAIQ,YAAc,OAClBR,EAAIK,UAAY,UAChBH,EAAKL,YAAQhB,EAAOA,EAAMiB,QAAQC,OAClCC,EAAIU,cAAgB,EACpBV,EAAIW,cAAgB,EACpBX,EAAIY,WAAgB,GACpBZ,EAAIa,YAAgB,OACpBb,EAAIO,SACJP,EAAIlC,SAIL,CAACgB,EAAQE,EAAS3B,EAAQC,IAI3B,4BACEA,MAAOA,EACPD,OAAQA,EACRyD,IAAK5B,KCzEI,SAAA5C,GACb,IAAMyE,EAAyB,IAAdzE,EAAMgB,MAIvB,OADAN,oBAAW,kBAAMgE,IAAMC,gBAAgB,IAErC,yBAAK7D,UAAU,mBACb,yBACEA,UAAU,cACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,UAIA,yBAAKF,UAAU,+BACb,yBACEA,UAAU,qBACV8D,MAAO,CAACH,SAAUA,IAFpB,WAIA,yBACE3D,UAAU,cACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,0BAAMF,UAAU,eAE1B,qZAoBO+D,UAKD,yBAAK/D,UAAU,mCACb,yBACEA,UAAU,qBACV8D,MAAO,CAACH,SAAUA,IAFpB,cAIA,yBAAK3D,UAAU,4BAEjB,yBAAKA,UAAU,+BACb,yBACEA,UAAU,qBACV8D,MAAO,CAACH,SAAUA,IAFpB,WAIA,yBAAK3D,UAAU,2BC9DR,SAAAd,GACb,IAAMyE,EAAyB,IAAdzE,EAAMgB,MAEvB,OACE,yBAAKF,UAAU,mBAEb,yBACEA,UAAU,cACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,cAKA,yBACEF,UAAU,oCACV8D,MAAO,CAACH,SAAUA,IAElB,uCAGF,yBACE3D,UAAU,uCACV8D,MAAO,CAACH,SAAUA,IAElB,0CAGF,yBACE3D,UAAU,oCACV8D,MAAO,CAACH,SAAUA,IAElB,uCAGF,yBAAK3D,UAAU,uBChCN,SAAAd,GACb,IAAMyE,EAAyB,IAAdzE,EAAMgB,MAEvB,OACE,yBAAKF,UAAU,mBAEb,yBACEA,UAAU,cACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,cAKA,yBACEF,UAAU,oCACV8D,MAAO,CAACH,SAAUA,IAElB,oCAGF,yBACE3D,UAAU,uCACV8D,MAAO,CAACH,SAAUA,IAElB,qCAGF,yBACE3D,UAAU,oCACV8D,MAAO,CAACH,SAAUA,IAElB,qCAGF,yBAAK3D,UAAU,uBC7BN,SAAAd,GAIb,OAFAU,oBAAW,kBAAMgE,IAAMC,gBAAgB,IAGrC,yBAAK7D,UAAU,mBACb,yBACEA,UAAU,cACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,cAKE,yBACEF,UAAU,iBACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,0BAAMF,UAAU,eAE1B,ifAkBI+D,WCtCW,SAAA7E,GAAK,OAClB,yBAAKc,UAAU,mBAEb,yBACEA,UAAU,cACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,oBAKA,wBACEF,UAAU,qBACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,oEACA,8EACA,wEACA,iGACA,oHAEA,oCAEE,uBACEF,UAAU,qBACVgE,KAAK,wBAFP,iBAFF,OAOE,uBACEhE,UAAU,qBACVgE,KAAK,mDAFP,iBCpBO,YAAwB,IAArB9D,EAAoB,EAApBA,MAAOD,EAAa,EAAbA,OACjB0D,EAAW1C,KAAKgD,MAAc,IAAR/D,GACtBgE,EAAUjD,KAAKgD,MAAc,GAAR/D,GACrBiE,EAAWlD,KAAKgD,MAAe,GAAThE,GAHQ,EAKRd,mBAAS,MALD,mBAK7BuC,EAL6B,KAKrBC,EALqB,OAMLxC,mBAAS,QANJ,mBAM7BiF,EAN6B,KAMnBC,EANmB,KAQ9BvC,EAAYC,sBAAY,SAAAC,GAC1BL,EAAUK,IACX,IA2DH,OAzDAK,0BAAgB,WACd,GAAIX,EAAQ,CACV,IAAIkB,EAAMlB,EAAOmB,WAAW,MAG5BD,EAAII,YACJJ,EAAIK,UAAY,OAChBL,EAAIM,SAAS,EAAG,EAAGgB,EAASC,GAC5BvB,EAAIO,SACJP,EAAIlC,OAEJ,IAAM4B,EAAOgC,cACV9B,UAAU,CAAC,CAAC,EAAE,GAAI,CAAC0B,EAASC,IAAY1B,YAAQhB,EAAOA,EAAMiB,QAAQC,OAEvD,SAAbyB,EACF9B,EAAKL,OAAO,EAAE,IAAI,EAAE,IACfK,EAAKL,OAAO,CAAC,EAAE,EAAE,IAGxB,IAAIa,EAAOC,YAAQT,EAAMM,GAGzBA,EAAII,YACJJ,EAAIK,UAAY,qBAChBH,EAAKL,YAAQhB,EAAOA,EAAMiB,QAAQC,OAElCC,EAAI2B,UAAY,GAEhB3B,EAAIlC,OAGJkC,EAAII,YACJF,EAAK,CACD,KAAQ,aACR,YAAe,CAAE,CAAC,IAAK,IAAK,CAAC,KAAM,OAGvCF,EAAI2B,UAAY,EAChB3B,EAAIQ,YAAc,MAClBR,EAAIO,SAGJP,EAAII,YACJF,EAAK,CACD,KAAQ,aACR,YAAe,CAAE,CAAC,EAAG,IAAK,CAAC,GAAI,OAGnCF,EAAI2B,UAAY,EAChB3B,EAAIQ,YAAc,OAClBR,EAAIO,SAEJP,EAAI4B,cAEL,CAAC9C,EAAQ0C,EAAUD,EAAUD,IAI9B,yBAAKlE,UAAU,mBAEb,yBAAKA,UAAU,qBACb,4BACE8D,MAAO,CAACH,SAAUA,GAClB3D,UAAS,oBAA4B,SAAboE,EAAsB,wBAA0B,kBACxE9C,QAAU,kBAAM+C,EAAY,UAH9B,kBAKA,4BACEP,MAAO,CAACH,SAAUA,GAClB3D,UAAS,oBAA4B,UAAboE,EAAuB,yBAA2B,mBAC1E9C,QAAU,kBAAM+C,EAAY,WAH9B,oBAOF,yBAAKrE,UAAU,qBACb,4BACEE,MAAOgE,EACPjE,OAAQkE,EACRT,IAAK5B,OC9FA,SAAA5C,GAAK,OAClB,yBAAKc,UAAU,mBAEb,yBACEA,UAAU,cACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,mBAKA,wBACEF,UAAU,qBACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,mHACA,gIACA,mGACA,4FCXS,SAAAhB,GAIb,OAFAU,oBAAW,kBAAMgE,IAAMC,gBAAgB,IAGrC,yBAAK7D,UAAU,mBAEb,yBACEA,UAAU,cACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,kBAKA,yBAAKF,UAAU,sBACb,yBACEA,UAAU,mBACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,0BAAMF,UAAU,eAE1B,iHAIG+D,SAKK,yBACE/D,UAAU,mBACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,0BAAMF,UAAU,eAE1B,0LAOG+D,YCzCY,SAAA7E,GAIb,OAFAU,oBAAW,kBAAMgE,IAAMC,gBAAgB,IAGrC,yBAAK7D,UAAU,mBAEb,yBACEA,UAAU,cACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,iBAKA,yBAAKF,UAAU,kBAEb,yBAAK8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QACzB,0BAAMF,UAAU,eAE5B,uJAKG+D,SAKK,yBAAKD,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAC3B,0BAAMF,UAAU,eAE1B,0OAMG+D,YCpCY,SAAA7E,GAIb,OAFAU,oBAAW,kBAAMgE,IAAMC,gBAAgB,IAGrC,yBAAK7D,UAAU,mBAEb,yBACEA,UAAU,cACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,kBAKA,yBAAKF,UAAU,kBAEb,yBAAK8D,MAAO,CAACH,SAAwB,KAAdzE,EAAMgB,QAC3B,0BAAMF,UAAU,eAE1B,2QAOG+D,SAKK,yBAAKD,MAAO,CAACH,SAAwB,KAAdzE,EAAMgB,QAC3B,0BAAMF,UAAU,eAE1B,+WAOG+D,YCvCY,SAAA7E,GAIb,OAFAU,oBAAW,kBAAMgE,IAAMC,gBAAgB,IAGrC,yBAAK7D,UAAU,mBAEb,yBACEA,UAAU,cACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,yBAKA,yBAAKF,UAAU,kBACb,uBACEA,UAAU,gBACV8D,MAAO,CAACH,SAAwB,KAAdzE,EAAMgB,QAF1B,yEAIA,uBACEF,UAAU,gBACV8D,MAAO,CAACH,SAAwB,KAAdzE,EAAMgB,QAF1B,oEAKA,yBAAK4D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QACzB,0BAAMF,UAAU,eAE5B,sOASM+D,YCtCS,SAAA7E,GAAK,OAClB,yBAAKc,UAAU,mBAEb,yBACEA,UAAU,cACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,YAKA,wBACEF,UAAU,qBACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,yFACA,0GACA,sFACA,iGACA,0GAEA,4BACE,uBAAG8D,KAAK,sDAAR,qBCnBO,SAAA9E,GAAK,OAClB,yBAAKc,UAAU,mBAEb,yBACEA,UAAU,cACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,cAKA,wBACEF,UAAU,qBACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,sHACA,sEACA,mGACA,qFACA,0JACA,oHAEA,4BACE,uBAAG8D,KAAK,uDAAR,yBAEF,4BACE,uBAAGA,KAAK,4CAAR,0BCvBO,SAAA9E,GAAK,OAClB,yBAAKc,UAAU,mBAEb,yBACEA,UAAU,cACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,mBAKA,wBACEF,UAAU,qBACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,qDACA,oDACA,2DACA,mDACA,2DACA,mDACA,8CACA,gECnBS,SAAAhB,GAAK,OAClB,yBAAKc,UAAU,mBAEb,yBACEA,UAAU,cACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,gBAKA,wBACEF,UAAU,qBACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,uBACE8D,KAAK,yDACLhE,UAAU,cAEV,iDAEF,uBACEgE,KAAK,mCACLhE,UAAU,cAEV,8CAEF,uBACEgE,KAAK,0CACLhE,UAAU,cAEV,4CAEF,uBACEgE,KAAK,uCACLhE,UAAU,cAEV,4CClCO,SAAAd,GAAK,OAClB,yBAAKc,UAAU,mBAEb,yBACEA,UAAU,cACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,eAKA,yBAAKF,UAAU,qBAEf,yBACEA,UAAU,mBACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,2DACA,8GACA,2DACA,sDACA,0EClBS,SAAAhB,GAAK,OAClB,yBAAKc,UAAU,mBAEb,yBACEA,UAAU,cACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,sBAKA,yBACEF,UAAU,mDACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,qCACA,qCACA,gDACA,wCACA,yCACA,oCACA,yCAIF,yBACEF,UAAU,oDACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,qCACA,oCACA,qCACA,wCACA,wCACA,sCACA,qDnB3BS,SAAAhB,GACb,IAAMuF,EAAYxD,KAAKgD,MAAqB,IAAf/E,EAAMe,QADb,EAGQd,mBAAS,MAHjB,mBAGfuF,EAHe,KAGNC,EAHM,OAIQxF,mBAAS,MAJjB,mBAIfyF,EAJe,KAINC,EAJM,OAKQ1F,mBAAS,MALjB,mBAKf2F,EALe,KAKNC,EALM,OAMM5F,mBAAS,GANf,mBAMfyC,EANe,KAMPC,EANO,OAOA1C,mBAAS,GAPT,mBAOf6F,EAPe,KAOVC,EAPU,OAQI9F,mBAAS,GARb,mBAQf+F,EARe,KAQRC,EARQ,KAUhBC,EAAarD,sBAAY,SAAAC,GAC3B2C,EAAW3C,IACZ,IACGqD,EAAatD,sBAAY,SAAAC,GAC7B6C,EAAW7C,IACV,IACGsD,EAAavD,sBAAY,SAAAC,GAC7B+C,EAAW/C,IACV,IAGGC,EAAS,WACbJ,EAAU,SAAAD,GAAM,OAAIA,EAAS,IAC7BqD,EAAO,SAAAD,GAAG,OAAIA,EAAM,IACpBG,EAAS,SAAAD,GAAK,OAAIA,EAAQ,KAmD5B,OAhDAtF,oBAAW,WACT,IAAIsC,EAAUC,WAAWF,EAAQ,KAEjC,OAAO,kBAAMG,aAAaF,KACzB,CAACN,IAEJS,0BAAgB,WACd,GAAIqC,GAAWE,GAAWE,EAAS,CAEjC,IAAIS,EAASd,EAAY,EACrBnC,EAAOC,cACRiD,MAAMD,EAAQ,GACdE,UAAU,CAACF,EAAQA,IACnBG,UAAU,IACVC,UAAU,GAEb,CAACjB,EAASE,EAASE,GAASc,QAAS,SAAAC,GACnC,IAAIjD,EAAMiD,EAAKhD,WAAW,MAEtBgD,IAASnB,EACXpC,EAAKL,OAAO,CAACL,EAAQ,EAAG,IAEjBiE,IAASjB,EAChBtC,EAAKL,OAAO,CAAC,EAAG+C,EAAK,IAErB1C,EAAKL,OAAO,CAAC,EAAG,EAAGiD,IAGrB,IAAIpC,EAAOC,YAAQT,EAAMM,GAGzBA,EAAII,YACJJ,EAAIK,UAAY,OAChBH,EAAK,CAACO,KAAM,WACZT,EAAIlC,OAEJkC,EAAII,YACJJ,EAAIQ,YAAc,OAClBR,EAAIK,UAAY,UAChBH,EAAKL,YAAQhB,EAAOA,EAAMiB,QAAQC,OAClCC,EAAIO,SACJP,EAAIlC,WAKP,CAACgE,EAASE,EAASE,EAASlD,EAAQoD,EAAKE,IAG1C,yBAAKlF,UAAU,mBAEb,yBACEA,UAAU,cACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,cAKA,yBACEF,UAAU,0BACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,0EACA,wEACA,wDACA,+DAGF,yBAAKF,UAAU,4BACb,yBAAKA,UAAU,2BACb,uBAAG8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAA3B,UACA,4BACEF,UAAU,eACVC,OAAQwE,EACRvE,MAAOuE,EACPf,IAAK0B,KAGT,yBAAKpF,UAAU,2BACb,uBAAG8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAA3B,OACA,4BACEF,UAAU,YACVC,OAAQwE,EACRvE,MAAOuE,EACPf,IAAK2B,KAGT,yBAAKrF,UAAU,2BACb,uBAAG8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAA3B,SACA,4BACEF,UAAU,cACVC,OAAQwE,EACRvE,MAAOuE,EACPf,IAAK4B,QoB3HF,SAAApG,GAAK,OAClB,yBAAKc,UAAU,mBAEb,yBACEA,UAAU,cACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,iBAKA,yBACEF,UAAU,yCACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,wBACEF,UAAU,yBACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,YAIA,qCACA,mDACA,wCACA,+CAGF,yBACEF,UAAU,sCACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,wBACEF,UAAU,sBACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,SAIA,qCACA,qDACA,wCACA,iDCjCS,SAAAhB,GAAK,OAClB,yBAAKc,UAAU,mBAEb,yBACEA,UAAU,cACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,SAKA,yBAAKF,UAAU,eAEf,yBACEA,UAAU,iBACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,uCACA,sCAEF,yBACEF,UAAU,qBACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,sCACA,sCAGF,yBACEF,UAAU,kBACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,uCACA,2CAEF,yBACEF,UAAU,qBACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,2CACA,2CCrCS,SAAAhB,GAAK,OAClB,yBAAKc,UAAU,mBAEb,yBACEA,UAAU,cACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAF1B,gBAKA,yBACEF,UAAU,mDACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,mCACA,qCACA,uCACA,uCAIF,yBACEF,UAAU,oDACV8D,MAAO,CAACH,SAAwB,IAAdzE,EAAMgB,QAExB,yCACA,sCACA,8CCvBS,WAAAhB,GAAU,IACf4G,EAAuB5G,EAAvB4G,mBAEFC,EAAeC,EAASC,IAC5B,SAAAC,GAAI,OAAI,kBAACA,EAAD,CAAMjG,OAAQf,EAAMe,OAAQC,MAAOhB,EAAMgB,UASnD,OANAN,oBACE,kBAAMkG,EAAmBC,EAAaI,OAAQ,IAC9C,CAAEL,EAAoBC,EAAaI,SAKnC,yBAAKnG,UAAU,iBACZ+F,EAAa7G,EAAM4B,gBChBX,WAAA5B,GAAU,IAAD,EACEC,mBAAS,MADX,mBACf6C,EADe,KACToE,EADS,KAGhB1C,EAAM3B,sBAAY,SAAAC,GACpBoE,EAAQpE,IACT,IAwBH,OAtBAK,0BAAgB,WACd,GAAIL,EAAM,CACR,IAAMY,EAAMZ,EAAKa,WAAW,MAC5BD,EAAII,YACJJ,EAAIK,UAAY,UAChBL,EAAIM,SAAS,EAAG,EAAGhE,EAAMgB,MAAOhB,EAAMe,QACtC2C,EAAIlC,OAEJkC,EAAII,YACJJ,EAAIQ,YAAc,SAClBR,EAAI2B,UAAY,EAChB3B,EAAIyD,OAAO,EAAG,GACdzD,EAAI0D,OAAOpH,EAAMgB,MAAOhB,EAAMe,QAC9B2C,EAAIO,SAEJP,EAAII,YACJJ,EAAIyD,OAAOnH,EAAMgB,MAAO,GACxB0C,EAAI0D,OAAO,EAAGpH,EAAMe,QACpB2C,EAAIO,WAEL,CAACnB,EAAM9C,EAAMe,OAAQf,EAAMgB,QAG5B,4BACEwD,IAAKA,EACLzD,OAAQf,EAAMe,OACdC,MAAOhB,EAAMgB,SC5BJ,G,MAAA,YAAqD,IAAnDD,EAAkD,EAAlDA,OAAea,GAAmC,EAA1CZ,MAA0C,EAAnCY,cAAcyF,EAAqB,EAArBA,gBACtCC,EAAWvF,KAAKgD,MAAe,IAAThE,GACtBwG,EAAWxF,KAAKgD,MAAe,GAAThE,GAGtByG,EAAc,SAACR,EAAMjG,GAAP,OAClB,kBAACiG,EAAD,CAAMjG,OAAQA,EAAQC,MAAgB,KAATD,KAG/B,OACE,yBAAKD,UAAU,yBAEb,yBACIA,UAAU,uBACVsB,QAAS,kBAAMiF,EAAgB,SAAAzF,GAAY,OAAIA,EAAe,MAE9D,yBACEd,UAAU,oBACVC,OAAQwG,EACRrG,QAAQ,cACRF,MAAkB,KAAXuG,GAEP,0BACE5F,EAAE,+XAKR,yBAAKb,UAAU,mCAEb,yBACEA,UAAU,iCACV8D,MAAO,CAAC7D,OAAQuG,EAAW,EAAGtG,MAAkB,KAAXsG,EAAkB,GACvDlF,QAAS,WACHR,EAAe,GAAK,GAAGyF,EAAgBzF,EAAe,KAKtD4F,EADJ5F,EAAe,GAAK,EACJkF,EAASlF,EAAe,GACxB6F,EAD4BH,IAIhD,yBACExG,UAAU,iCACV8D,MAAO,CAAC7D,OAAQuG,EAAW,EAAGtG,MAAkB,KAAXsG,EAAkB,GACvDlF,QAAS,WACHR,EAAe,GAAK,GAAGyF,EAAgBzF,EAAe,KAKtD4F,EADJ5F,EAAe,GAAK,EACJkF,EAASlF,EAAe,GACxB6F,EAD4BH,IAIhD,yBACExG,UAAU,iCACV8D,MAAO,CAAC7D,OAAQuG,EAAW,EAAGtG,MAAkB,KAAXsG,EAAkB,GACvDlF,QAAS,WACHR,EAAe,GAAK,GAAGyF,EAAgBzF,EAAe,KAKtD4F,EADJ5F,EAAe,GAAK,EACJkF,EAASlF,EAAe,GACxB6F,EAD4BH,IAIhD,yBACExG,UAAU,wCACV8D,MAAO,CAAC7D,OAAQwG,EAAW,EAAGvG,MAAkB,KAAXuG,EAAkB,IAEtDC,EAAYV,EAASlF,GAAe2F,IAEvC,yBACEzG,UAAU,iCACV8D,MAAO,CAAC7D,OAAQuG,EAAW,EAAGtG,MAAkB,KAAXsG,EAAkB,GACvDlF,QAAS,WACHR,EAAe,GAAKkF,EAASG,OAAS,GAAGI,EAAgBzF,EAAe,KAI5EA,EAAe,GAAKkF,EAASG,OAAS,EAClCO,EAAYV,EAASlF,EAAe,GAAI0F,GACxCE,EAAYC,EAAQH,IAG5B,yBACExG,UAAU,iCACV8D,MAAO,CAAC7D,OAAQuG,EAAW,EAAGtG,MAAkB,KAAXsG,EAAkB,GACvDlF,QAAS,WACHR,EAAe,GAAKkF,EAASG,OAAS,GAAGI,EAAgBzF,EAAe,KAI5EA,EAAe,GAAKkF,EAASG,OAAS,EAClCO,EAAYV,EAASlF,EAAe,GAAI0F,GACxCE,EAAYC,EAAQH,IAG5B,yBACExG,UAAU,iCACV8D,MAAO,CAAC7D,OAAQuG,EAAW,EAAGtG,MAAkB,KAAXsG,EAAkB,GACvDlF,QAAS,WACHR,EAAe,GAAKkF,EAASG,OAAS,GAAGI,EAAgBzF,EAAe,KAI5EA,EAAe,GAAKkF,EAASG,OAAS,EAClCO,EAAYV,EAASlF,EAAe,GAAI0F,GACxCE,EAAYC,EAAQH,KAM9B,yBACExG,UAAU,uBACVsB,QAAS,kBAAMiF,EAAgB,SAAAzF,GAAY,OAAIA,EAAe,MAE9D,yBACEd,UAAU,oBACVC,OAAQwG,EACRrG,QAAQ,cACRF,MAAkB,KAAXuG,GAEP,0BACE5F,EAAE,oYCjID,G,MAAA,SAAA3B,GASb,IATuB,IAAD,EACkBC,mBAAS,GAD3B,mBACf2B,EADe,KACDyF,EADC,OAEwBpH,mBAAS,IAFjC,mBAEf4B,EAFe,KAEE+E,EAFF,OAIE5G,EAAM0H,WAAvB3G,EAJe,EAIfA,OAAQC,EAJO,EAIPA,MACX2G,EAAS3G,EACT4G,EAAS7F,KAAKgD,MAAM4C,EAAS,OAG1BA,EAAS3G,GAAS4G,EAAS7G,GAChC4G,GAAU,GACVC,EAAS7F,KAAKgD,MAAM4C,EAAS,OAI/B,OACE,yBAAK7G,UAAU,yBACb,yBACEA,UAAU,uBACV8D,MAAO,CAAC7D,OAAQ6G,EAAQ5G,MAAO2G,IAE/B,kBAAC,EAAD,CACE/F,aAAcA,EACdb,OAAQgB,KAAKgD,MAAe,GAAT6C,GACnB/F,gBAAiBA,EACjBb,MAAO2G,IAET,kBAACE,EAAD,CACEjG,aAAcA,EACdb,OAAQgB,KAAKgD,MAAe,GAAT6C,GACnB5G,MAAO2G,EAEPf,mBAAoBA,IAEtB,kBAAC,EAAD,CACEhF,aAAcA,EACdb,OAAQgB,KAAKgD,MAAe,GAAT6C,GACnB5G,MAAO2G,EAEPN,gBAAiBA,Q,MC3C3BS,IAASC,OAAO,kBCKD,WAAO,IAAD,ECJN,WAAO,IAAD,EACiB9H,mBAAS,CAACe,MAAO,IAAKD,OAAQ,MAD/C,mBACZ2G,EADY,KACAM,EADA,OAEK/H,mBAAS,MAFd,mBAEZ6C,EAFY,KAENoE,EAFM,KAIbe,EAAUpF,sBAAY,SAAAC,GACxBoE,EAAQpE,IACT,IAqBH,OAnBAK,0BAAgB,WACd,GAAIL,EAAM,CACR,IAAMoF,EAAU,kBACdC,OAAOC,sBAAsB,WAAO,IAAD,EACXtF,EAAKuF,wBAAtBrH,EAD4B,EAC5BA,MAAOD,EADqB,EACrBA,OACZiH,EAAc,CACZhH,MAAOe,KAAKgD,MAAM/D,GAClBD,OAAQgB,KAAKgD,MAAMhE,QAQzB,OAJAmH,IAEAC,OAAOG,iBAAiB,SAAUJ,GAE3B,WAAQC,OAAOI,oBAAoB,SAAUL,MAErD,CAACpF,IAEG,CAACmF,EAASP,GDtBac,GADX,mBACZP,EADY,KACHP,EADG,KAGnB,OACE,yBAAK5G,UAAU,MAAM0D,IAAKyD,GACxB,kBAAC,EAAD,CACEP,WAAYA,MDXJ,MAASe,SAASC,eAAe,W","file":"static/js/main.d2738b72.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport '../styles/TopControl.css';\n\n\nexport default props => {\n  const [playSelected, setPlaySelected] = useState('play');\n  const [time, setTime] = useState(0);\n  const [isTimeNegative, setIsTimeNegative] = useState(false);\n  const [isTimerActive, setIsTimerActive] = useState(false);\n\n\n  useEffect( () => {\n    let timer = null;\n    if (isTimerActive) {\n      timer = setInterval( () => setTime(time => time - 1), 1000 );\n    } else clearInterval(timer);\n\n    return () => clearInterval(timer);\n  }, [isTimerActive]);\n\n  useEffect( () => {\n    // sets the background of div.topcontrol-time-display to red if we are counting up\n    if (time < 0 && !isTimeNegative) setIsTimeNegative(true);\n  }, [time, isTimeNegative])\n\n  const formatTime = time => {\n    if (time < 0) {\n      time *= -1;\n    }\n    let min = Math.floor(time / 60);\n    let sec = time % 60; \n  \n    let string = '';\n\n    // handle minutes\n    if (min === 0) string = '00:';\n    else if (min < 10) string = `0${min}:`;\n    else string = `${min}:`;\n  \n    // handle seconds\n    if (sec === 0) string += '00';\n    else if (sec < 10) string += `0${sec}`;\n    else string += `${sec}`;\n  \n    return string;\n  };\n  \n  return (\n    <div className=\"topcontrol-wrapper\">\n\n      <svg \n        className=\"topcontrol-title-svg\"\n        height={props.height}\n        width={props.height * 3} \n        version=\"1.1\" \n        viewBox=\"0 0 158.75 52.916668\" \n        xmlns=\"http://www.w3.org/2000/svg\" \n      >\n        <defs>\n          <linearGradient id=\"linearGradient2195\">\n            <stop stopColor=\"#fc0\" offset=\"0\"/>\n            <stop stopColor=\"#f48812\" offset=\".48303\"/>\n            <stop stopColor=\"#e95800\" offset=\"1\"/>\n          </linearGradient>\n        </defs>\n \n        <g transform=\"translate(0 -244.08)\">\n          <g \n            transform=\"matrix(.96624 0 0 .96624 2.9876 10.481)\" \n            fill=\"url(#linearGradient2195)\" \n            strokeWidth=\".27383\" \n            aria-label=\"d3-geo\"\n          >\n          <path \n            d=\"m1.4101 270.99q0-6.1246 2.7355-9.7558 2.7597-3.6312 7.5286-3.6312 3.8248 0 6.3182 2.8565v-13.363h7.0203v37.183h-6.3182l-0.33891-2.7839q-2.6144 3.2681-6.7298 3.2681-4.6237 0-7.4318-3.6312-2.7839-3.6554-2.7839-10.143zm6.9961 0.50836q0 3.6796 1.283 5.6404 1.283 1.9608 3.728 1.9608 3.2439 0 4.5753-2.7355v-10.337q-1.3072-2.7355-4.5269-2.7355-5.0594 0-5.0594 8.2065z\" \n          />\n          <path \n            d=\"m37.31 263.56h3.728q2.6629 0 3.9459-1.3314 1.283-1.3314 1.283-3.5344 0-2.1303-1.283-3.3165-1.2588-1.1862-3.4859-1.1862-2.0093 0-3.3649 1.1136-1.3556 1.0894-1.3556 2.8565h-6.9961q0-2.7597 1.4767-4.9384 1.5009-2.2029 4.1637-3.4375 2.6871-1.2346 5.9067-1.2346 5.592 0 8.7632 2.6871 3.1712 2.6629 3.1712 7.3592 0 2.4208-1.4767 4.4542-1.4767 2.0334-3.8733 3.1228 2.9776 1.0651 4.43 3.1954 1.4767 2.1303 1.4767 5.0352 0 4.6963-3.4375 7.5286-3.4133 2.8323-9.0537 2.8323-5.2773 0-8.6422-2.7839-3.3407-2.7839-3.3407-7.3592h6.9961q0 1.985 1.4767 3.2439 1.5009 1.2588 3.6796 1.2588 2.4934 0 3.8975-1.3072 1.4283-1.3314 1.4283-3.5101 0-5.2773-5.8099-5.2773h-3.7038z\" \n          />\n          <path \n            d=\"m72.557 272.01h-13.629v-5.6404h13.629z\" \n          />\n          <path \n            d=\"m77.205 270.99q0-6.0278 2.8565-9.7074 2.8807-3.6796 7.7465-3.6796 4.309 0 6.7056 2.9534l0.29049-2.4692h6.3425v25.321q0 3.4375-1.5735 5.9793-1.5493 2.5418-4.3816 3.8732-2.8323 1.3314-6.6329 1.3314-2.8807 0-5.6162-1.162-2.7355-1.1378-4.1395-2.9534l3.0986-4.2606q2.6144 2.9292 6.3425 2.9292 2.7839 0 4.3332-1.5009 1.5493-1.4767 1.5493-4.2122v-1.4041q-2.4208 2.7355-6.3667 2.7355-4.7205 0-7.6497-3.6796-2.9049-3.7038-2.9049-9.8042zm6.9961 0.50836q0 3.5586 1.4283 5.592 1.4283 2.0093 3.9217 2.0093 3.1954 0 4.5753-2.3966v-11.015q-1.4041-2.3966-4.5269-2.3966-2.5176 0-3.9701 2.0577-1.4283 2.0577-1.4283 6.1488z\" \n          />\n          <path \n            d=\"m118.55 284.77q-5.7615 0-9.3926-3.5343-3.607-3.5344-3.607-9.4169v-0.67782q0-3.9459 1.5251-7.0445 1.5251-3.1228 4.309-4.7932 2.8081-1.6946 6.3909-1.6946 5.3741 0 8.4485 3.3891 3.0986 3.3891 3.0986 9.6105v2.8565h-16.679q0.33891 2.566 2.0335 4.1153 1.7188 1.5493 4.3332 1.5493 4.0427 0 6.3182-2.9292l3.4375 3.849q-1.5735 2.2271-4.2606 3.4859-2.6871 1.2346-5.9551 1.2346zm-0.79886-21.497q-2.0819 0-3.3891 1.404-1.283 1.4041-1.6461 4.0185h9.7316v-0.55678q-0.0484-2.324-1.2588-3.5828-1.2104-1.283-3.4375-1.283z\" \n          />\n          <path \n            d=\"m132.23 270.95q0-3.8975 1.5009-6.9476 1.5009-3.0502 4.309-4.7205 2.8323-1.6703 6.5603-1.6703 5.3015 0 8.6422 3.2438 3.3649 3.2438 3.7522 8.8117l0.0484 1.7914q0 6.0278-3.3649 9.6831-3.3649 3.6312-9.0295 3.6312-5.6646 0-9.0537-3.6312-3.3649-3.6312-3.3649-9.8768zm6.9961 0.50837q0 3.728 1.4041 5.713 1.404 1.9608 4.0185 1.9608 2.5418 0 3.9701-1.9366 1.4283-1.9608 1.4283-6.2456 0-3.6554-1.4283-5.6646-1.4283-2.0092-4.0185-2.0092-2.566 0-3.9701 2.0092-1.4041 1.985-1.4041 6.173z\" \n          />\n          </g>\n        </g>\n      </svg>\n\n\n      <div className=\"topcontrol-where-am-i\">\n        { `${props.currentSlide} / ${props.slideDeckLength}` }\n      </div>\n\n      <div className=\"topcontrol-timer-wrapper\">\n\n        <div className={isTimeNegative ? \"topcontrol-time-display-negative\" : \"topcontrol-time-display\"}>\n          <p>{formatTime(time)}</p>\n        </div>  \n\n        <div className=\"topcontrol-play-reset-wrapper\"> \n        \n          <div \n            className=\"topcontrol-button topcontrol-reset-button\" \n            onClick={() => {\n              setTime(0);\n              setPlaySelected('play');\n              setIsTimerActive(false);\n              setIsTimeNegative(false);\n            }}\n          >\n            <svg\n              className=\"svg-button svg-reset-button\"\n              height={props.height * 0.3}\n              viewBox=\"0 0 512 512\"\n              width={props.height * 0.3}\n            >\n              <path\n                d=\"M212.333 224.333H12c-6.627 0-12-5.373-12-12V12C0 5.373 5.373 0 12 0h48c6.627 0 12 5.373 12 12v78.112C117.773 39.279 184.26 7.47 258.175 8.007c136.906.994 246.448 111.623 246.157 248.532C504.041 393.258 393.12 504 256.333 504c-64.089 0-122.496-24.313-166.51-64.215-5.099-4.622-5.334-12.554-.467-17.42l33.967-33.967c4.474-4.474 11.662-4.717 16.401-.525C170.76 415.336 211.58 432 256.333 432c97.268 0 176-78.716 176-176 0-97.267-78.716-176-176-176-58.496 0-110.28 28.476-142.274 72.333h98.274c6.627 0 12 5.373 12 12v48c0 6.627-5.373 12-12 12z\"\n              />\n            </svg>\n          </div>\n\n        {\n          playSelected === 'play'\n            ? (\n              <div \n                className=\"topcontrol-button topcontrol-play-button\" \n                onClick={\n                  () => {\n                    setPlaySelected('');\n                    setIsTimerActive(true);\n                  }}\n              >\n                <svg\n                  className=\"svg-button svg-play-button\"\n                  height={props.height * 0.3}\n                  viewBox=\"0 0 512 512\"\n                  width={props.height * 0.3}\n                >\n                  <path\n                    d=\"M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6z\"\n                  />\n                </svg>\n              </div>\n              ) : (\n              <div \n                className=\"topcontrol-button topcontrol-pause-button\" \n                onClick={\n                  () => {\n                    setPlaySelected('play');\n                    setIsTimerActive(false);\n                  }}\n              >\n                <svg\n                  className=\"svg-button svg-pause-button\"\n                  height={props.height * 0.3}\n                  viewBox=\"0 0 512 512\"\n                  width={props.height * 0.3}\n                >\n                  <path\n                    d=\"M144 479H48c-26.5 0-48-21.5-48-48V79c0-26.5 21.5-48 48-48h96c26.5 0 48 21.5 48 48v352c0 26.5-21.5 48-48 48zm304-48V79c0-26.5-21.5-48-48-48h-96c-26.5 0-48 21.5-48 48v352c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48z\"\n                  />\n                </svg>\n              </div>\n              )\n          }\n\n        </div>\n\n        <div className=\"topcontrol-add-time-wrapper\">\n          <div \n            className=\"topcontrol-add-time-button topcontrol-add-time-5\"\n            onClick={() => setTime(time + 300)}\n          >\n            <svg\n              className=\"svg-button svg-pause-button\"\n              height={props.height * 0.2}\n              viewBox=\"0 0 512 512\"\n              width={props.height * 0.2}\n            >\n              <path\n                d=\"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"\n              />\n            </svg>\n            <span>5</span>\n          </div>\n          <div \n            className=\"topcontrol-add-time-button topcontrol-add-time-1\"\n            onClick={() => setTime(time + 60)}\n          >\n            <svg\n              className=\"svg-button svg-pause-button\"\n              height={props.height * 0.2}\n              viewBox=\"0 0 512 512\"\n              width={props.height * 0.2}\n            >\n              <path\n                d=\"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\"\n              />\n            </svg>\n            <span>1</span>\n          </div>\n        </div>        \n\n      </div> \n    </div>\n  );\n};","import React, { useState, useCallback, useEffect, useLayoutEffect } from 'react';\n\nimport { geoOrthographic, geoPath } from 'd3-geo';\nimport { feature }from 'topojson-client';\n\nimport world from '../../../node_modules/world-atlas/countries-110m.json';\nconsole.log('w:', world)\n\nexport default props => {\n  const globeSize = Math.round(props.height * 0.43);\n\n  const [canvas1, setCanvas1] = useState(null);\n  const [canvas2, setCanvas2] = useState(null);\n  const [canvas3, setCanvas3] = useState(null);\n  const [lambda, setLambda] = useState(0);\n  const [phi, setPhi] = useState(0);\n  const [gamma, setGamma] = useState(0);\n\n  const canvasRef1 = useCallback(node => {\n      setCanvas1(node);\n  }, []);\n  const canvasRef2 = useCallback(node => {\n    setCanvas2(node);\n  }, []);\n  const canvasRef3 = useCallback(node => {\n    setCanvas3(node);\n  }, []);\n\n\n  const rotate = () => {\n    setLambda(lambda => lambda + 1);\n    setPhi(phi => phi + 1);\n    setGamma(gamma => gamma + 1);\n  };\n\n  useEffect( () => {\n    let timeout = setTimeout(rotate, 100);\n\n    return () => clearTimeout(timeout);\n  }, [lambda]);\n\n  useLayoutEffect(() => {\n    if (canvas1 && canvas2 && canvas3) {\n    \n      let radius = globeSize / 2;\n      let proj = geoOrthographic()\n        .scale(radius -2)\n        .translate([radius, radius])\n        .clipAngle(90)\n        .precision(0);\n\n      [canvas1, canvas2, canvas3].forEach( item => {\n        let ctx = item.getContext('2d');\n\n        if (item === canvas1) {\n          proj.rotate([lambda, 0, 0]);\n        } \n        else if (item === canvas2) {\n          proj.rotate([0, phi, 0]);\n        } else {\n          proj.rotate([0, 0, gamma]);\n        }\n        \n        let path = geoPath(proj, ctx);\n        \n        // sphere background\n        ctx.beginPath();\n        ctx.fillStyle = \"blue\";\n        path({type: \"Sphere\"});\n        ctx.fill();\n\n        ctx.beginPath();\n        ctx.strokeStyle = \"#000\";\n        ctx.fillStyle = \"#b19a5c\";\n        path(feature(world, world.objects.land));\n        ctx.stroke();\n        ctx.fill();\n\n      });\n      \n    }\n  }, [canvas1, canvas2, canvas3, lambda, phi, gamma]);\n  \n  return (\n    <div className=\"slide-grid-full\">\n\n      <div \n        className=\"slide-title\"\n        style={{fontSize: props.width * 0.07}}\n      >.rotate( )</div>\n\n      <div \n        className=\"projection-rotate-group\"\n        style={{fontSize: props.width * 0.03}}\n      >\n        <p>projection.rotate( [ lambda, phi, gamma ] )</p>\n        <p>projection.rotate( [ yaw, pitch, roll ] )</p>\n        <p>All inputs are in degrees</p>\n        <p>(input / 360) * (Math.PI / 180)</p>\n      </div>\n\n      <div className=\"projection-rotate-globes\">\n        <div className=\"projection-rotate-globe\">\n          <p style={{fontSize: props.width * 0.03}}>Lambda</p>\n          <canvas \n            className=\"lambda-globe\"\n            height={globeSize}\n            width={globeSize}\n            ref={canvasRef1}\n          ></canvas>\n        </div>\n        <div className=\"projection-rotate-globe\">\n          <p style={{fontSize: props.width * 0.03}}>Phi</p>\n          <canvas \n            className=\"phi-globe\"\n            height={globeSize}\n            width={globeSize}\n            ref={canvasRef2}\n          ></canvas>\n        </div>\n        <div className=\"projection-rotate-globe\">\n          <p style={{fontSize: props.width * 0.03}}>Gamma</p>\n          <canvas \n            className=\"gamma-globe\"\n            height={globeSize}\n            width={globeSize}\n            ref={canvasRef3}\n          ></canvas>\n        </div>\n      </div>\n\n    </div>\n  );\n};","\nimport Zero from './slide/zero.js';\nimport Basics from './slide/basics.js';\nimport BasicFlow from './slide/basic-flow';\nimport BasicFlowAlt from './slide/basic-flow-alt';\nimport BasicCode from './slide/basic-code';\nimport GeojsonOverview from './slide/geojson-overview.js';\nimport Antimeridian from './slide/antimeridian.js';\nimport GeojsonGeometryObject from './slide/geojson-geometry-obj.js';\nimport GeojsonZeroDim from './slide/geojson-zero-dim.js';\nimport GeojsonOneDim from './slide/geojson-one-dim.js';\nimport GeojsonTwoDim from './slide/geojson-two-dim.js';\nimport GeojsonHetero from './slide/geojson-hetero.js';\nimport TopoJSON from './slide/topojson.js';\nimport ShapeFiles from './slide/shapefiles.js';\nimport ConvertingData from './slide/converting-data.js';\nimport DataSources from './slide/data-sources.js';\nimport Projection from './slide/projection.js';\nimport ProjectionMeth from './slide/projection-meth.js';\nimport ProjectionRotate from './slide/projection-rotate.js';\nimport CanvasSVG from './slide/canvas-svg.js';\nimport Path from './slide/path.js';\nimport PathMeth from './slide/path-meth';\n\n\nexport default [\n  Zero,\n  Basics,\n  BasicFlow,\n  BasicFlowAlt,\n  BasicCode,\n  GeojsonOverview,\n  Antimeridian,\n  GeojsonGeometryObject,\n  GeojsonZeroDim,\n  GeojsonOneDim,\n  GeojsonTwoDim,\n  GeojsonHetero,\n  TopoJSON,\n  ShapeFiles,\n  ConvertingData,\n  DataSources,\n  Projection,\n  ProjectionMeth,\n  ProjectionRotate,\n  CanvasSVG,\n  Path,\n  PathMeth,\n];","import React, { useState, useCallback, useEffect, useLayoutEffect } from 'react';\n\nimport { geoOrthographic, geoPath } from 'd3-geo';\nimport { feature }from 'topojson-client';\n\nimport world from '../../../node_modules/world-atlas/land-50m.json';\n\nimport '../../styles/Slides.css';\n// console.log('world: ', world)\n\nexport default props => {\n  const { width, height } = props;\n\n  const [canvas, setCanvas] = useState(null);\n  const [lambda, setLambda] = useState(0);\n\n  const canvasRef = useCallback(node => {\n      setCanvas(node);\n  }, []);\n\n  const rotate = () => {\n    setLambda(lambda - 0.5);\n  };\n\n  useEffect( () => {\n    let timeout = setTimeout(rotate, 200);\n\n    return () => clearTimeout(timeout);\n  }, [lambda]);\n\n  useLayoutEffect(() => {\n    if (canvas) {\n      let proj = geoOrthographic()\n        .rotate([lambda, 0, 0])\n        .fitExtent(\n          [[5,5], [width - 5, height - 5]], \n          feature(world, world.objects.land)\n        );\n      let ctx = canvas.getContext('2d');\n      let path = geoPath(proj, ctx);\n\n      // background\n      ctx.beginPath();\n      ctx.fillStyle = \"#000\";\n      ctx.fillRect(0, 0, width, height);\n      ctx.stroke();\n\n      // sphere background\n      ctx.beginPath();\n      ctx.strokeStyle = \"#0000ff\";\n      ctx.fillStyle = \"#0000ff\";\n      path({type: \"Sphere\"});\n      ctx.shadowOffsetX = 0;\n      ctx.shadowOffsetY = 0;\n      ctx.shadowBlur    = 20;\n      ctx.shadowColor   = \"rgba(145, 200, 245, 0.8)\";\n      ctx.stroke();\n      ctx.fill();\n\n      ctx.beginPath();\n      ctx.strokeStyle = \"#000\";\n      ctx.fillStyle = \"#b19a5c\";\n      path(feature(world, world.objects.land));\n      ctx.shadowOffsetX = 0;\n      ctx.shadowOffsetY = 0;\n      ctx.shadowBlur    = 10;\n      ctx.shadowColor   = \"#333\";\n      ctx.stroke();\n      ctx.fill();\n\n      \n    }\n  }, [canvas, lambda,  height, width]);\n\n\n  return (\n    <canvas \n      width={width}\n      height={height}\n      ref={canvasRef}\n    >\n    </canvas>\n  );\n\n};","import React, { useEffect } from 'react';\nimport Prism from 'prismjs';\n\nimport '../../../node_modules/prismjs/themes/prism-okaidia.css';\n\n\nexport default props => {\n  const fontSize = props.width * 0.05;\n\n  // Initialize syntax highting\n  useEffect( () => Prism.highlightAll(), []);\n  return (\n    <div className=\"slide-grid-full\">\n      <div \n        className=\"slide-title\"\n        style={{fontSize: props.width * 0.08}}\n      >Basics</div>\n      <div className=\"basics-geoJSON basics-group\">\n        <div \n          className=\"basics-group-title\"\n          style={{fontSize: fontSize}}\n        >geoJSON</div>\n        <pre \n          className=\"basics-code\"\n          style={{fontSize: props.width * 0.01}}\n        > \n          <code className=\"language-js\">\n{\n`{\n  \"type\":\"FeatureCollection\",\n  \"features\":[ \n    {\n    \"type\":\"Feature\",\n    \"properties\":{\n      \"name\":\"Afghanistan\"\n    },\n    \"geometry\":{\n      \"type\":\"Polygon\",\n      \"coordinates\":[\n        [\n          [61.210817,35.650072],\n          [62.230651,35.270664],\n          [62.984662,35.404041],\n          [63.193538,35.857166]\n        ]\n        ]\n      },\n    \"id\":\"AFG\"\n    }`.trim()\n}\n          </code>\n        </pre>\n      </div>\n      <div className=\"basics-projections basics-group\">\n        <div \n          className=\"basics-group-title\"\n          style={{fontSize: fontSize}}\n        >Projection</div>\n        <div className=\"basics-projection-card\"></div>\n      </div>\n      <div className=\"basics-geoPath basics-group\">\n        <div \n          className=\"basics-group-title\"\n          style={{fontSize: fontSize}}\n        >geoPath</div>\n        <div className=\"basics-geopath-card\"></div>\n      </div>\n      \n    </div>\n  );\n};","import React from 'react';\n\n\nexport default props => {\n  const fontSize = props.width * 0.05;\n  \n  return (\n    <div className=\"slide-grid-full\">\n\n      <div \n        className=\"slide-title\"\n        style={{fontSize: props.width * 0.08}}\n      >Basic Flow</div>\n\n      <div \n        className=\"basicflow-geoJSON basicflow-group\"\n        style={{fontSize: fontSize}}\n      >\n        <p>geoJSON</p>\n      </div>\n\n      <div \n        className=\"basicflow-projection basicflow-group\"\n        style={{fontSize: fontSize}}\n      >\n        <p>Projection</p>\n      </div>\n\n      <div \n        className=\"basicflow-geoPath basicflow-group\"\n        style={{fontSize: fontSize}}\n      >\n        <p>geoPath</p>\n      </div>\n        \n      <div className=\"basicflow-arrows\"></div>\n      \n    </div>\n  );\n};","import React from 'react';\n\n\nexport default props => {\n  const fontSize = props.width * 0.05;\n  \n  return (\n    <div className=\"slide-grid-full\">\n\n      <div \n        className=\"slide-title\"\n        style={{fontSize: props.width * 0.08}}\n      >Basic Flow</div>\n\n      <div \n        className=\"basicflow-geoJSON basicflow-group\"\n        style={{fontSize: fontSize}}\n      >\n        <p>Data</p>\n      </div>\n\n      <div \n        className=\"basicflow-projection basicflow-group\"\n        style={{fontSize: fontSize}}\n      >\n        <p>Scale</p>\n      </div>\n\n      <div \n        className=\"basicflow-geoPath basicflow-group\"\n        style={{fontSize: fontSize}}\n      >\n        <p>Shape</p>\n      </div>\n        \n      <div className=\"basicflow-arrows\"></div>\n      \n    </div>\n  );\n};","import React, { useEffect } from 'react';\nimport Prism from 'prismjs';\n\nimport '../../../node_modules/prismjs/themes/prism-okaidia.css';\n\n\nexport default props => {\n  // Initialize syntax highting\n  useEffect( () => Prism.highlightAll(), []);\n\n  return (\n    <div className=\"slide-grid-full\">\n      <div \n        className=\"slide-title\"\n        style={{fontSize: props.width * 0.08}}\n      >Basic Code</div>\n        \n        <pre \n          className=\"basiccode-code\"\n          style={{fontSize: props.width * 0.02}}\n        > \n          <code className=\"language-js\">\n{\n`import { geoOrthographic, geoPath } from 'd3-geo';\nimport { select } from 'd3-selection';\nimport geoData from '../../utils/geoData.js';\n\nconst proj = geoOrthographic()\n  .rotate([lambda, 0, 0])\n  .fitExtent([[50,50], [width - 50, height - 50]], geoData);\n  \nconst path = geoPath().projection(proj);\n\n// ...later in the react return jsx\ngeoData.features.map( (item, idx) => (\n  <path\n    key={idx}\n    ref={\n      node => select(node).datum(item).attr('d', path) \n    }\n  />\n))`.trim()\n}\n          </code>\n        </pre>\n      \n    </div>\n  );\n};","import React from 'react';\n\n\nexport default props => (\n  <div className=\"slide-grid-full\">\n\n    <div \n      className=\"slide-title\"\n      style={{fontSize: props.width * 0.07}}\n    >GeoJSON Overview</div>\n\n    <ul \n      className=\"slide-full-bullets\"\n      style={{fontSize: props.width * 0.03}}\n    >\n      <li>A data structure to encode geography</li>\n      <li>Must be valid JSON and contain a single object</li>\n      <li>Can accept any number of foreign members</li>\n      <li>A coordinate with 6 decimal places has accuracy of 10 centimeters</li>\n      <li>Geography that crosses the antimeridian line should be split into two geometry types</li>\n      \n      <li>\n        Spec:\n        <a \n          className=\"geojson-overview-a\"\n          href=\"https://geojson.org/\"\n        > geojson.org </a>\n        -or-\n        <a \n          className=\"geojson-overview-a\"\n          href=\"https://tools.ietf.org/html/rfc7946#section-6.1\"\n        > RFC 7946</a>\n      </li>\n    </ul>\n\n  </div>\n);","import React, { useCallback, useLayoutEffect, useState } from 'react';\n\nimport { geoPath, geoEquirectangular } from 'd3-geo';\nimport { feature } from 'topojson-client';\nimport world from '../../../node_modules/world-atlas/land-50m.json';\n\nimport '../../styles/Slides.css';\n\nexport default ({ width, height }) => {\n  const fontSize = Math.round(width * 0.05);\n  const width90 = Math.round(width * 0.9);\n  const height80 = Math.round(height * 0.8);\n\n  const [canvas, setCanvas] = useState(null);\n  const [meridian, setMeridian] =useState('anti')\n\n  const canvasRef = useCallback(node => {\n      setCanvas(node);\n  }, []);\n\n  useLayoutEffect(() => {\n    if (canvas) {\n      let ctx = canvas.getContext('2d');\n      \n      // background\n      ctx.beginPath();\n      ctx.fillStyle = \"#fff\";\n      ctx.fillRect(0, 0, width90, height80);\n      ctx.stroke();\n      ctx.fill();\n        \n      const proj = geoEquirectangular()\n        .fitExtent([[0,0], [width90, height80]], feature(world, world.objects.land));\n\n      if (meridian === \"anti\") {\n        proj.rotate([-180,0,0]);\n      } else proj.rotate([0,0,0]);\n        \n\n      let path = geoPath(proj, ctx);\n        \n      // countries\n      ctx.beginPath();\n      ctx.fillStyle = \"rgba(0, 0, 0, 0.7)\";\n      path(feature(world, world.objects.land));\n      \n      ctx.lineWidth = 0.7;\n      // ctx.stroke();\n      ctx.fill();\n\n      // 180 meridian line\n      ctx.beginPath();\n      path({\n          \"type\": \"LineString\",\n          \"coordinates\": [ [180, 90], [180, -90] ]\n        }\n      )\n      ctx.lineWidth = 4;\n      ctx.strokeStyle = \"red\";\n      ctx.stroke();\n\n      // Prime meridian line\n      ctx.beginPath();\n      path({\n          \"type\": \"LineString\",\n          \"coordinates\": [ [0, 90], [0, -90] ]\n        }\n      )\n      ctx.lineWidth = 4;\n      ctx.strokeStyle = \"blue\";\n      ctx.stroke();\n\n      ctx.closePath();\n      }\n  }, [canvas, meridian, height80, width90]);\n\n  \n  return (\n    <div className=\"slide-grid-full\">\n\n      <div className=\"am-button-wrapper\">\n        <button \n          style={{fontSize: fontSize}}\n          className={`am-button ${meridian === \"anti\" ? \"am-button-anti-active\" : \"am-button-anti\"}`}\n          onClick={ () => setMeridian(\"anti\")}\n        >Anti Meriadian</button>\n        <button \n          style={{fontSize: fontSize}}\n          className={`am-button ${meridian === \"prime\" ? \"am-button-prime-active\" : \"am-button-prime\"}`}\n          onClick={ () => setMeridian(\"prime\")}\n        >Prime Meriadian</button>\n      </div>\n\n      <div className=\"am-canvas-wrapper\">\n        <canvas\n          width={width90}\n          height={height80}\n          ref={canvasRef}\n        ></canvas>\n      </div>\n    </div>\n  );\n};","import React from 'react';\n\n\nexport default props => (\n  <div className=\"slide-grid-full\">\n\n    <div \n      className=\"slide-title\"\n      style={{fontSize: props.width * 0.07}}\n    >Geometry Object</div>\n\n    <ul \n      className=\"slide-full-bullets\"\n      style={{fontSize: props.width * 0.03}}\n    >\n      <li>Must contain a property 'type' with a value that is one of the seven geometry types</li>\n      <li>Types: Point, MultiPoint, LineString, MultiLineString, Polygon, MultiPolygon, GeometryCollection</li>\n      <li>Must contain a property 'coordinates' with a value that is an array</li>\n      <li >Must Not have properties named 'geometry' or 'properties'</li>\n      \n    </ul>\n    \n  </div>\n);","import React, { useEffect } from 'react';\n\nimport Prism from 'prismjs';\n\nimport '../../../node_modules/prismjs/themes/prism-okaidia.css';\n\n\nexport default props => {\n  // Initialize syntax highting\n  useEffect( () => Prism.highlightAll(), []);\n\n  return (\n    <div className=\"slide-grid-full\">\n\n      <div \n        className=\"slide-title\"\n        style={{fontSize: props.width * 0.07}}\n      >Zero Dimension</div>\n\n      <div className=\"slide-full-bullets\">\n        <pre \n          className=\"geojson-dim-code\"\n          style={{fontSize: props.width * 0.02}}\n        > \n          <code className=\"language-js\">\n{\n`// - Point -\n{\n  \"type\": \"Point\",\n  \"coordinates\": [ 61.210817 , 35.650072 ]  // [ longitude, latitude ]\n}`.trim()\n}\n          </code>\n        </pre>\n\n        <pre \n          className=\"geojson-dim-code\"\n          style={{fontSize: props.width * 0.02}}\n        > \n          <code className=\"language-js\">\n{\n`// - MultiPoint -\n{\n  \"type\": \"MultiPoint\",\n  // [  [ Point ] , [ Point ] , [ Point ] , ... ]\n  \"coordinates\": [\n    [ 61.210817 , 35.650072 ], [ 31.240837 , 31.404072 ] \n  ]\n}`.trim()\n}\n          </code>\n        </pre>\n       \n      </div>\n      \n    </div>\n  );\n};","import React, { useEffect } from 'react';\n\nimport Prism from 'prismjs';\n\nimport '../../../node_modules/prismjs/themes/prism-okaidia.css';\n\n\nexport default props => {\n  // Initialize syntax highting\n  useEffect( () => Prism.highlightAll(), []);\n\n  return (\n    <div className=\"slide-grid-full\">\n\n      <div \n        className=\"slide-title\"\n        style={{fontSize: props.width * 0.07}}\n      >One Dimension</div>\n\n      <div className=\"slide-full-sub\">\n      \n        <pre style={{fontSize: props.width * 0.02}}> \n            <code className=\"language-js\">\n{\n`{ // must contain 2 or more points \n  \"type\": \"LineString\",\n  \"coordinates\": [ \n    [ 61.210817 , 35.650072 ], [ 62.230651 , 35.270664 ] \n  ]\n}`.trim()\n}\n          </code>\n        </pre>\n\n        <pre style={{fontSize: props.width * 0.02}}> \n          <code className=\"language-js\">\n{\n`{ // [  [ LineString ] , [ LineString ] , ... ]\n  \"type\": \"MultiLineString\",\n  \"coordinates\": [ \n    [ [ 61.210817 , 35.650072 ], [ 62.230651 , 35.270664 ] ],\n    [ [ 21.493937 , 32.009322 ], [ 82.454651 , 15.432264 ] ]\n  ]\n}`.trim()\n}\n          </code>\n        </pre>\n        \n      </div>\n      \n    </div>\n  );\n};","import React, { useEffect } from 'react';\n\nimport Prism from 'prismjs';\n\nimport '../../../node_modules/prismjs/themes/prism-okaidia.css';\n\n\nexport default props => {\n  // Initialize syntax highting\n  useEffect( () => Prism.highlightAll(), []);\n\n  return (\n    <div className=\"slide-grid-full\">\n\n      <div \n        className=\"slide-title\"\n        style={{fontSize: props.width * 0.07}}\n      >Two Dimensions</div>\n\n      <div className=\"slide-full-sub\">\n    \n        <pre style={{fontSize: props.width * 0.015}}> \n          <code className=\"language-js\">\n{\n`{ - Polygon -\n  // must contain 4 or more points with the first and last points are equivalent\n  \"type\": \"Polygon\",\n  \"coordinates\": [ \n    [ 61.210817 , 35.650072 ], [ 62.230651 , 35.270664 ],\n    [ 62.984662 , 35.404041 ], [ 61.210817 , 35.650072 ] \n  ]\n}`.trim()\n}\n          </code>\n        </pre>\n\n        <pre style={{fontSize: props.width * 0.015}}> \n          <code className=\"language-js\">\n{\n`{ - MultiPolygon -\n  // [  [ Polygon ] , [ Polygon ] , [ Polygon ] , ... ]\n  \"type\": \"MultiPolygon\",\n  \"coordinates\": [ \n    [ [ 61.210817 , 35.650072 ], [ 62.230651 , 35.270664 ], [ 62.984662 , 35.404041 ], [ 61.210817 , 35.650072 ] ],\n    [ [ 21.210817 , 07.650072 ], [ 22.230651 , 25.270664 ], [ 12.984662 , 25.404041 ], [ 21.210817 , 07.650072 ] ]\n  ]\n}`.trim()\n}\n          </code>\n        </pre>\n        \n      </div>\n      \n    </div>\n  );\n};","import React, { useEffect } from 'react';\n\nimport Prism from 'prismjs';\n\nimport '../../../node_modules/prismjs/themes/prism-okaidia.css';\n\n\nexport default props => {\n  // Initialize syntax highting\n  useEffect( () => Prism.highlightAll(), []);\n\n  return (\n    <div className=\"slide-grid-full\">\n\n      <div \n        className=\"slide-title\"\n        style={{fontSize: props.width * 0.07}}\n      >7: GeometryCollection</div>\n\n      <div className=\"slide-full-sub\">\n        <p \n          className=\"geojson-dim-p\"\n          style={{fontSize: props.width * 0.025}}\n        >Must have a property named 'geometries' with a value that is an array</p>\n        <p \n          className=\"geojson-dim-p\"\n          style={{fontSize: props.width * 0.025}}\n        >Each value in the array must be a geometry type and can be mixed</p>\n        \n        <pre style={{fontSize: props.width * 0.02}}> \n            <code className=\"language-js\">\n{\n`{\n  \"type\": \"GeometryCollection\",\n  \"geometries\": [\n      { \"type\": \"Point\",\n        \"coordinates\": [100.0, 0.0]\n      },\n      { \"type\": \"LineString\",\n        \"coordinates\": [ [101.0, 0.0], [102.0, 1.0] ]\n      }\n  ]}`.trim()\n}\n          </code>\n        </pre>\n      </div>\n    </div>\n  );\n};","import React from 'react';\n\n\nexport default props => (\n  <div className=\"slide-grid-full\">\n\n    <div \n      className=\"slide-title\"\n      style={{fontSize: props.width * 0.07}}\n    >TopoJSON</div>\n\n    <ul \n      className=\"slide-full-bullets\"\n      style={{fontSize: props.width * 0.03}}\n    >\n      <li>TopoJSON is an extension of GeoJSON that encodes topology</li>\n      <li>TopoJSON files are stitched together from shared line segments called arcs</li>\n      <li>Can reduce a GeoJSON file by 80% before simplification</li>\n      <li>TopoJSON cannot be used directly, it must be converted to GeoJSON</li>\n      <li>TopoJSON files are stitched together from shared line segments called arcs</li>\n      \n      <li>\n        <a href=\"https://github.com/topojson/topojson-specification\">TopoJSON Spec</a>\n      </li>\n    </ul>\n\n  </div>\n);","import React from 'react';\n\n\nexport default props => (\n  <div className=\"slide-grid-full\">\n\n    <div \n      className=\"slide-title\"\n      style={{fontSize: props.width * 0.07}}\n    >Shapefiles</div>\n\n    <ul \n      className=\"slide-full-bullets\"\n      style={{fontSize: props.width * 0.03}}\n    >\n      <li>The shapefile format is a digital vector storage format for storing geometric location</li>\n      <li>Does not store topological information</li>\n      <li>three mandatory files have filename extensions .shp, .shx, and .dbf</li>\n      <li>.shp — shape format; the feature geometry itself</li>\n      <li>.shx — shape index format; a positional index of the feature geometry to allow seeking forwards and backwards quickly</li>\n      <li>.dbf — attribute format; columnar attributes for each shape, in dBase IV format</li>\n      \n      <li>\n        <a href=\"www.esri.com/library/whitepapers/pdfs/shapefile.pdf\">Shapefile Whitepaper</a>\n      </li>\n      <li>\n        <a href=\"www.esri.com/news/arcuser/0401/topo.html\">Shapefile Overview</a>\n      </li>\n    </ul>\n\n  </div>\n);","import React from 'react';\n\n\nexport default props => (\n  <div className=\"slide-grid-full\">\n\n    <div \n      className=\"slide-title\"\n      style={{fontSize: props.width * 0.07}}\n    >Converting Data</div>\n\n    <ul \n      className=\"slide-full-bullets\"\n      style={{fontSize: props.width * 0.03}}\n    >\n      <li>npm install shapefile</li>\n      <li>Shapefile to GeoJSON</li>\n      <li>npm install topojson-server</li>\n      <li>GeoJSON to TopoJSON</li>\n      <li>npm install topojson-client</li>\n      <li>TopoJSON to GeoJSON</li>\n      <li>Merge TopoJSON</li>\n      <li>Quantize TopoJSON Coordinates</li>\n  \n    </ul>\n\n  </div>\n);","import React from 'react';\n\n\nexport default props => (\n  <div className=\"slide-grid-full\">\n\n    <div \n      className=\"slide-title\"\n      style={{fontSize: props.width * 0.07}}\n    >Data Sources</div>\n\n    <ul \n      className=\"slide-full-bullets\"\n      style={{fontSize: props.width * 0.03}}\n    >\n      <a \n        href=\"https://www.census.gov/programs-surveys/geography.html\"\n        className=\"data-src-a\"\n      >\n        <li >US Census Bureau</li>\n      </a>\n      <a \n        href=\"https://www.naturalearthdata.com\"\n        className=\"data-src-a\"\n      >\n        <li >Natural Earth</li>\n      </a>\n      <a \n        href=\"https://github.com/topojson/world-atlas\"\n        className=\"data-src-a\"\n      >\n        <li >World Atlas</li>\n      </a>\n      <a \n        href=\"https://github.com/topojson/us-atlas\"\n        className=\"data-src-a\"\n      >\n        <li >US Atlas</li>\n      </a>\n    </ul>\n    \n  </div>\n);","import React from 'react';\n\n\nexport default props => (\n  <div className=\"slide-grid-full\">\n\n    <div \n      className=\"slide-title\"\n      style={{fontSize: props.width * 0.07}}\n    >Projections</div>\n\n    <div className=\"projection-image\"></div>\n\n    <div \n      className=\"projection-group\"\n      style={{fontSize: props.width * 0.02}}\n    >\n      <p>d3-geo or d3-geo-projections</p>\n      <p>Projections transform spherical polygonal geometry to planar polygonal geometry</p>\n      <p>All map projections DISTORT </p>\n      <p>Projection Categories: </p>\n      <p>Azimuthal, Composite, Conic, Cylindrical</p>\n    </div>\n\n  </div>\n);","import React from 'react';\n\n\nexport default props => (\n  <div className=\"slide-grid-full\">\n\n    <div \n      className=\"slide-title\"\n      style={{fontSize: props.width * 0.07}}\n    >Projection Methods</div>\n\n    <div \n      className=\"projection-meth-group projection-meth-group-left\"\n      style={{fontSize: props.width * 0.03}}\n    >\n      <p>invert</p>\n      <p>stream</p>\n      <p>preclip, postclip</p>\n      <p>clipAngle</p>\n      <p>clipExtent</p>\n      <p>scale</p>\n      <p>translate</p>\n    </div>\n      \n\n    <div \n      className=\"projection-meth-group projection-meth-group-right\"\n      style={{fontSize: props.width * 0.03}}\n    >\n      <p>center</p>\n      <p>angle</p>\n      <p>rotate</p>\n      <p>percision</p>\n      <p>fitExtent</p>\n      <p>fitSize</p>\n      <p>fitWidth, fitHeight</p>\n    </div>\n\n  </div>\n);","import React from 'react';\n\n\nexport default props => (\n  <div className=\"slide-grid-full\">\n\n    <div \n      className=\"slide-title\"\n      style={{fontSize: props.width * 0.07}}\n    >Canvas vs SVG</div>\n\n    <div \n      className=\"canvasSVG-canvas-group canvasSVG-group\"\n      style={{fontSize: props.width * 0.03}}\n    >\n      <h3 \n        className=\"canvasSVG-canvas-title\"\n        style={{fontSize: props.width * 0.04}}\n      >&#60;canvas&gt;</h3>\n      <p>Raster</p>\n      <p>Collection of Pixels</p>\n      <p>Stateless</p>\n      <p>More Performant</p>\n    </div>\n\n    <div \n      className=\"canvasSVG-svg-group canvasSVG-group\"\n      style={{fontSize: props.width * 0.03}}\n    >\n      <h3 \n        className=\"canvasSVG-svg-title\"\n        style={{fontSize: props.width * 0.04}}\n      >&#60;svg&gt;</h3>\n      <p>Vector</p>\n      <p>Collection of Elements</p>\n      <p>Statefull</p>\n      <p>Less Performant</p>\n    </div>\n    \n  </div>\n);","import React from 'react';\n\n\nexport default props => (\n  <div className=\"slide-grid-full\">\n\n    <div \n      className=\"slide-title\"\n      style={{fontSize: props.width * 0.07}}\n    >Paths</div>\n\n    <div className=\"path-image\"></div>\n\n    <div \n      className=\"path-input-geo\"\n      style={{fontSize: props.width * 0.03}}\n    >\n      <p>geometry</p>\n      <p>object</p>\n    </div>\n    <div \n      className=\"path-input-feature\"\n      style={{fontSize: props.width * 0.03}}\n    >\n      <p>feature</p>\n      <p>object</p>\n    </div>\n    \n    <div \n      className=\"path-output-svg\"\n      style={{fontSize: props.width * 0.03}}\n    >\n      <p>svg path</p>\n      <p>data string</p>\n    </div>\n    <div \n      className=\"path-output-canvas\"\n      style={{fontSize: props.width * 0.03}}\n    >\n      <p>renders path</p>\n      <p>to canvas</p>\n    </div>\n\n  </div>\n);","import React from 'react';\n\n\nexport default props => (\n  <div className=\"slide-grid-full\">\n\n    <div \n      className=\"slide-title\"\n      style={{fontSize: props.width * 0.07}}  \n    >Path Methods</div>\n\n    <div \n      className=\"projection-meth-group projection-meth-group-left\"\n      style={{fontSize: props.width * 0.03}}\n    >\n      <p>area</p>\n      <p>bounds</p>\n      <p>centroid</p>\n      <p>measure</p>\n    </div>\n      \n\n    <div \n      className=\"projection-meth-group projection-meth-group-right\"\n      style={{fontSize: props.width * 0.03}}\n    >\n      <p>projection</p>\n      <p>context</p>\n      <p>pointRadius</p>\n    </div>\n\n  </div>\n);","import React, { useEffect } from 'react';\n\nimport slideArr from './slideArr.js';\n\n\nexport default props => {\n  const { setSlideDeckLength } = props;\n\n  const slidesMapped = slideArr.map(  \n    Comp => <Comp height={props.height} width={props.width} />\n  );\n\n  useEffect( \n    () => setSlideDeckLength(slidesMapped.length -1), \n    [ setSlideDeckLength, slidesMapped.length ]\n  );\n  \n\n  return (\n    <div className=\"slide-wrapper\">\n      {slidesMapped[props.currentSlide]}\n    </div>\n  );\n};","\nimport React, { useCallback, useLayoutEffect, useState } from 'react';\n\n\nexport default props => {\n  const [node, setNode] = useState(null);\n\n  const ref = useCallback(node => {\n      setNode(node);\n  }, []);\n\n  useLayoutEffect(() => {\n    if (node) {\n      const ctx = node.getContext('2d');\n      ctx.beginPath();\n      ctx.fillStyle = \"#080808\";\n      ctx.fillRect(0, 0, props.width, props.height);\n      ctx.fill();\n\n      ctx.beginPath();\n      ctx.strokeStyle = \"maroon\"\n      ctx.lineWidth = 2;\n      ctx.moveTo(0, 0);\n      ctx.lineTo(props.width, props.height);\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(props.width, 0);\n      ctx.lineTo(0, props.height);\n      ctx.stroke();\n    }\n  }, [node, props.height, props.width]);\n\n  return (\n    <canvas\n      ref={ref}\n      height={props.height}\n      width={props.width}\n    ></canvas>\n  );\n};","import React from 'react';\n\nimport slideArr from './slideArr.js';\nimport xSlide from './slide/xSlide.js'\n\nimport '../styles/BottomControl.css';\n\n\n\nexport default ({height, width, currentSlide, setCurrentSlide}) => {\n  const height75 = Math.round(height * 0.75);\n  const height90 = Math.round(height * 0.9);\n\n\n  const renderSlide = (Comp, height) => (\n    <Comp height={height} width={height * 1.33} />\n  );\n\n  return (\n    <div className=\"bottomcontrol-wrapper\">\n\n      <div \n          className=\"bottomcontrol-button\" \n          onClick={() => setCurrentSlide(currentSlide => currentSlide - 1)}\n        >\n          <svg\n            className=\"svg-angles-button\"\n            height={height90}\n            viewBox=\"0 0 448 512\"\n            width={height90 * 1.33}\n          >\n            <path\n              d=\"M223.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L319.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L393.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34zm-192 34l136 136c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9L127.9 256l96.4-96.4c9.4-9.4 9.4-24.6 0-33.9L201.7 103c-9.4-9.4-24.6-9.4-33.9 0l-136 136c-9.5 9.4-9.5 24.6-.1 34z\"\n            />\n          </svg>\n        </div>\n\n        <div className=\"bottomcontrol-thumbnail-wrapper\">\n\n          <div \n            className=\"bottomcontrol-thumbnail-button\"\n            style={{height: height75 + 2, width: height75 * 1.33 + 2}}\n            onClick={() => {\n              if (currentSlide - 3 >= 0) setCurrentSlide(currentSlide - 3)\n            }}\n          >\n            {\n              currentSlide - 3 >= 0\n                ? renderSlide(slideArr[currentSlide - 3], height75)\n                : renderSlide(xSlide, height75)\n            }\n          </div>\n          <div \n            className=\"bottomcontrol-thumbnail-button\"\n            style={{height: height75 + 2, width: height75 * 1.33 + 2}}\n            onClick={() => {\n              if (currentSlide - 2 >= 0) setCurrentSlide(currentSlide - 2)\n            }}\n          >\n            {\n              currentSlide - 2 >= 0\n                ? renderSlide(slideArr[currentSlide - 2], height75)\n                : renderSlide(xSlide, height75)\n            }\n          </div>\n          <div \n            className=\"bottomcontrol-thumbnail-button\"\n            style={{height: height75 + 2, width: height75 * 1.33 + 2}}\n            onClick={() => {\n              if (currentSlide - 1 >= 0) setCurrentSlide(currentSlide - 1)\n            }}\n          >\n            {\n              currentSlide - 1 >= 0\n                ? renderSlide(slideArr[currentSlide - 1], height75)\n                : renderSlide(xSlide, height75)\n            }\n          </div>\n          <div \n            className=\"bottomcontrol-thumbnail-button-center\"\n            style={{height: height90 + 3, width: height90 * 1.33 + 3}}\n          >\n            {renderSlide(slideArr[currentSlide], height90)}\n          </div>\n          <div \n            className=\"bottomcontrol-thumbnail-button\"\n            style={{height: height75 + 2, width: height75 * 1.33 + 2}}\n            onClick={() => {\n              if (currentSlide + 1 <= slideArr.length - 1) setCurrentSlide(currentSlide + 1)\n            }}\n          >\n            {\n              currentSlide + 1 <= slideArr.length - 1\n                ? renderSlide(slideArr[currentSlide + 1], height75)\n                : renderSlide(xSlide, height75)\n            }\n          </div>\n          <div \n            className=\"bottomcontrol-thumbnail-button\"\n            style={{height: height75 + 2, width: height75 * 1.33 + 2}}\n            onClick={() => {\n              if (currentSlide + 2 <= slideArr.length - 1) setCurrentSlide(currentSlide + 2)\n            }}\n          >\n            {\n              currentSlide + 2 <= slideArr.length - 1\n                ? renderSlide(slideArr[currentSlide + 2], height75)\n                : renderSlide(xSlide, height75)\n            }\n          </div>\n          <div \n            className=\"bottomcontrol-thumbnail-button\"\n            style={{height: height75 + 2, width: height75 * 1.33 + 2}}\n            onClick={() => {\n              if (currentSlide + 3 <= slideArr.length - 1) setCurrentSlide(currentSlide + 3)\n            }}\n          >\n            {\n              currentSlide + 3 <= slideArr.length - 1\n                ? renderSlide(slideArr[currentSlide + 3], height75)\n                : renderSlide(xSlide, height75)\n            }\n          </div>\n          \n        </div>\n\n        <div \n          className=\"bottomcontrol-button\" \n          onClick={() => setCurrentSlide(currentSlide => currentSlide + 1)}\n        >\n          <svg\n            className=\"svg-angles-button\"\n            height={height90}\n            viewBox=\"0 0 448 512\"\n            width={height90 * 1.33}\n          >\n            <path\n              d=\"M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34zm192-34l-136-136c-9.4-9.4-24.6-9.4-33.9 0l-22.6 22.6c-9.4 9.4-9.4 24.6 0 33.9l96.4 96.4-96.4 96.4c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l136-136c9.4-9.2 9.4-24.4 0-33.8z\"\n            />\n          </svg>\n        </div>\n    </div>\n  );\n};","import React, { useState } from 'react';\n\nimport TopControl from './TopControl.js';\nimport Slide from './Slide.js';\nimport BottomControl from './BottomControl.js';\n\nimport '../styles/Presentation.css';\n\nexport default props => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [slideDeckLength, setSlideDeckLength] = useState('');\n\n  const {height, width} = props.dimensions;\n  let slideW = width;\n  let slideH = Math.round(slideW / 1.333);\n    \n\n  while (slideW > width || slideH > height) {\n    slideW -= 50;\n    slideH = Math.round(slideW / 1.333);\n  }\n\n\n  return (\n    <div className=\"presentation-backdrop\">\n      <div \n        className=\"presentation-wrapper\"\n        style={{height: slideH, width: slideW}}\n      >\n        <TopControl \n          currentSlide={currentSlide}\n          height={Math.round(slideH * 0.1)}\n          slideDeckLength={slideDeckLength}\n          width={slideW}\n        />\n        <Slide \n          currentSlide={currentSlide}\n          height={Math.round(slideH * 0.8)}\n          width={slideW}\n\n          setSlideDeckLength={setSlideDeckLength}\n        />\n        <BottomControl \n          currentSlide={currentSlide}\n          height={Math.round(slideH * 0.1)}\n          width={slideW}\n\n          setCurrentSlide={setCurrentSlide}\n        />\n      </div>\n    </div>\n  );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","import React from 'react';\n\nimport Presentation from './components/Presentation.js';\n\nimport useElementSize from './utils/useElementSize.js';\n\nimport './styles/App.css';\n\n\nexport default () => {\n  const [sizeRef, dimensions] = useElementSize();\n\n  return (\n    <div className=\"App\" ref={sizeRef}>\n      <Presentation \n        dimensions={dimensions}\n      />\n    </div>\n  );\n};","\nimport {useState, useCallback, useLayoutEffect} from 'react';\n\n// A hook to retrieve the height and width of an element with an event listener\n\nexport default () => {\n  const [dimensions, setDimensions] = useState({width: 960, height: 500});\n  const [node, setNode] = useState(null);\n\n  const sizeRef = useCallback(node => {\n      setNode(node);\n  }, []);\n\n  useLayoutEffect(() => {\n    if (node) {\n      const measure = () =>\n        window.requestAnimationFrame(() => {\n          let {width, height} = node.getBoundingClientRect();\n          setDimensions({ \n            width: Math.round(width), \n            height: Math.round(height) \n          })\n        });\n      \n      measure();\n\n      window.addEventListener(\"resize\", measure);\n\n      return () => { window.removeEventListener(\"resize\", measure); };\n      }\n  }, [node]);\n\n  return [sizeRef, dimensions];\n};"],"sourceRoot":""}